{"version":3,"sources":["components/pagination.js","components/FilterStatus.js","components/FilterGender.js","components/Characters/Characters.js","components/Locations/Locations.js","components/Episodes/Episodes.js","components/WatchList/WatchList.js","App.js","api/api.js","reportWebVitals.js","index.js"],"names":["useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","FilterStatus","status","handleChange","FormControl","variant","style","minWidth","InputLabel","Select","value","onChange","label","MenuItem","FilterGender","gender","Characters","characters","console","log","useState","columns","setColumns","rows","setRows","setPage","setRowsPerPage","queryName","setQueryName","setStatus","setGender","useEffect","key","name","newRows","filter","character","toLowerCase","includes","toLocaleLowerCase","handleChangeStatus","target","handleChangeGender","Table","TableHead","TableRow","map","header","TableCell","TextField","type","placeholder","e","TableBody","slice","row","i","width","alt","src","image","height","species","id","TableFooter","TablePagination","rowsPerPageOptions","length","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Locations","locations","queryType","setQueryType","queryDimension","setQueryDimension","location","dimension","noValidate","autoComplete","SelectProps","inputProps","native","Episodes","episodes","episode","air_date","WatchList","App","links","setLinks","setCharacters","setLocations","setEpisodes","setValue","fetch","then","response","json","result","getCharacters","results","getLocations","getEpisodes","BottomNavigation","backgroundColor","maxWidth","newValue","showLabels","BottomNavigationAction","icon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ab6a901.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nexport function TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nexport const FilterStatus = ({ status, handleChange }) => (\n<FormControl variant=\"outlined\" style={{minWidth: 100}}>\n        <InputLabel >Status</InputLabel>\n        <Select\n          value={status}\n          onChange={handleChange}\n          label=\"Status\"\n        >\n          <MenuItem value=\"\" >\n            <em>All</em>\n          </MenuItem>\n          <MenuItem value='Alive'>Alive</MenuItem>\n          <MenuItem value='Dead'>Dead</MenuItem>\n          <MenuItem value='unknown'>unknown</MenuItem>\n        </Select>\n      </FormControl>\n);\n\nFilterStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nexport const FilterGender = ({ gender, handleChange }) => (\n<FormControl variant=\"outlined\" style={{minWidth: 100}}>\n        <InputLabel >Gender</InputLabel>\n        <Select\n          value={gender}\n          onChange={handleChange}\n          label=\"Status\"\n        >\n          <MenuItem value=\"\" >\n            <em>All</em>\n          </MenuItem>\n          <MenuItem value='Male'>Male</MenuItem>\n          <MenuItem value='Female'>Female</MenuItem>\n          <MenuItem value='genderless'>genderless</MenuItem>\n          <MenuItem value='unknown'>unknown</MenuItem>\n        </Select>\n      </FormControl>\n);\n\nFilterGender.propTypes = {\n  gender: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\n","import React, {useEffect, useState} from 'react';\n\nimport { TablePaginationActions } from '../pagination'\n// import PropTypes from 'prop-types';\n\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport { FilterStatus } from '../FilterStatus';\nimport { FilterGender } from '../FilterGender';\n\nexport const Characters = ({ characters }) => {\n  console.log(characters[0]);\n\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState(characters);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [queryName, setQueryName] = useState('');\n  const [status, setStatus] = useState('');\n  const [gender, setGender] = useState('');\n\n\n \n  useEffect(() => {\n    setColumns([\n      {key: 'image', name: 'Image'},\n      {key: 'name', name: 'Name'},\n      {key: 'status', name: 'Status'},\n      {key: 'species', name: 'Species'},\n      {key: 'gender', name: 'Gender'},\n    ])\n  }, [])\n\n  useEffect(() => {\n    const newRows = characters\n      .filter(character => character.name.toLowerCase()\n        .includes(queryName.toLocaleLowerCase())\n      );\n    setRows(newRows);\n  }, [characters, queryName]);\n\n  useEffect(() => {\n      const newRows = characters\n        .filter(character => character.status.includes(status));\n      setRows(newRows);\n  }, [characters, status]);\n\n  useEffect(() => {\n    const newRows = characters\n      .filter(character => character.gender.includes(gender));\n    setRows(newRows);\n}, [characters, gender]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeStatus = (event) => {\n      setStatus(event.target.value);\n  };\n\n  const handleChangeGender = (event) => {\n    setGender(event.target.value);\n};\n\n  return (\n    <div>\n    <h1>Characters</h1>\n    {columns && rows && (\n        <Table className='Characters__table' aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            {columns.map(header => (\n              <TableCell key={header.key}>\n                {header.key ==='name' ? (\n                  <TextField \n                    label={header.name}\n                    variant=\"outlined\" \n                    type=\"text\"\n                    className=\"new-todo\"\n                    placeholder=\"Find me!\"\n                    value={queryName}\n                    onChange={e => {\n                      setQueryName(e.target.value);\n                    }}\n                  />\n                ) \n                : header.key ==='status'\n                ? (\n                  <FilterStatus \n                    status={status}\n                    handleChange={handleChangeStatus}\n                  />\n                ) \n                : header.key ==='gender'\n                ? (\n                  <FilterGender \n                    gender={gender}\n                    handleChange={handleChangeGender}\n                  />\n                ) : header.name }\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n            ).map((row, i) => (\n            <TableRow key={row.id}>\n              <TableCell width='10%'>\n                <img alt={row.name} src={row.image} width=\"50\" height=\"50\"></img>\n              </TableCell>\n              <TableCell width='30%'>{row.name}</TableCell>\n              <TableCell width='20%'>{row.status}</TableCell>\n              <TableCell width='20%'>{row.species}</TableCell>\n              <TableCell width='20%'>{row.gender}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              // colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    )}\n    </div>\n  )\n}","import React, {useState, useEffect} from 'react';\nimport { TablePaginationActions } from '../pagination'\n// import PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\nexport const Locations = ({ locations }) => {\n  console.log(locations[0]);\n\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState(locations);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [queryName, setQueryName] = useState('');\n  const [queryType, setQueryType] = useState('');\n  const [queryDimension, setQueryDimension] = useState('');\n\n\n  useEffect(() => {\n    setColumns([\n      {key: 'name', name: 'Name'},\n      {key: 'type', name: 'Type'},\n      {key: 'dimension', name: 'Dimension'},\n    ])\n  }, [])\n\n  useEffect(() => {\n    const newRows = locations\n      .filter(location => location.name.toLowerCase()\n        .includes(queryName.toLocaleLowerCase())\n      );\n    setRows(newRows);\n  }, [locations, queryName]);\n\n  useEffect(() => {\n    const newRows = locations\n      .filter(location => location.type.toLowerCase()\n        .includes(queryType.toLocaleLowerCase())\n      );\n    setRows(newRows);\n  }, [locations, queryType]);\n\n  useEffect(() => {\n    const newRows = locations\n      .filter(location => location.dimension.toLowerCase()\n        .includes(queryDimension.toLocaleLowerCase())\n      );\n    setRows(newRows);\n  }, [locations, queryDimension]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <h1>Locations</h1>\n        <form noValidate autoComplete=\"off\">\n      </form>\n      {columns && rows && (\n          <Table className='Table' aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(header => (\n                <TableCell \n                  key={header.key}\n                >\n                  {header.key ==='name' ? (\n                    <TextField \n                      label={header.name}\n                      variant=\"outlined\" \n                      type=\"text\"\n                      className=\"new-todo\"\n                      placeholder=\"Find me!\"\n                      value={queryName}\n                      onChange={(e) => {\n                        setQueryName(e.target.value);\n                      }}\n                    />\n                  ) : header.key ==='type' ? (\n                    <TextField \n                      label={header.name}\n                      variant=\"outlined\" \n                      type=\"text\"\n                      className=\"new-todo\"\n                      placeholder=\"Find me!\"\n                      value={queryType}\n                      onChange={(e) => {\n                        setQueryType(e.target.value);\n                    }}\n                  />\n                  ) : header.key === 'dimension' ? (\n                    <TextField \n                      label={header.name}\n                      variant=\"outlined\" \n                      type=\"text\"\n                      className=\"new-todo\"\n                      placeholder=\"Find me!\"\n                      value={queryDimension}\n                      onChange={(e) => {\n                        setQueryDimension(e.target.value);\n                      }}\n                    />\n                  ) : header.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n              ).map((row, i) => (\n              <TableRow key={row.id}>\n                <TableCell width='33%'>{row.name}</TableCell>\n                <TableCell width='33%'>{row.type}</TableCell>\n                <TableCell width='33%'>{row.dimension}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      )}\n      </div>\n  )\n}","import React, {useState, useEffect} from 'react';\nimport { TablePaginationActions } from '../pagination'\n// import PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\nexport const Episodes = ({ episodes }) => {\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState(episodes);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [queryName, setQueryName] = useState('');\n\n  useEffect(() => {\n    setColumns([\n      {key: 'name', name: 'Name'},\n      {key: 'episode', name: 'Episode'},\n      {key: 'air_date', name: 'Air date'},\n    ])\n  }, [])\n\n  useEffect(() => {\n    const newRows = episodes\n      .filter(episode => episode.name.toLowerCase()\n        .includes(queryName.toLocaleLowerCase())\n      );\n    setRows(newRows);\n  }, [episodes, queryName]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <h1>Episodes</h1>\n        <form noValidate autoComplete=\"off\">\n      </form>\n      {columns && rows && (\n          <Table className='Table' aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(header => (\n                <TableCell \n                  key={header.key}\n                >\n                  {header.key ==='name' ? (\n                    <TextField \n                      label={header.name}\n                      variant=\"outlined\" \n                      type=\"text\"\n                      className=\"new-todo\"\n                      placeholder=\"Find me!\"\n                      value={queryName}\n                      onChange={(e) => {\n                        setQueryName(e.target.value);\n                      }}\n                    />\n                  ) : header.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n              ).map((row, i) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.episode}</TableCell>\n                <TableCell>{row.air_date}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      )}\n      </div>\n  )\n}","import React from 'react';\n\nexport const WatchList = () => {\n\n  return (\n    <h1>WatchList</h1>\n  )\n}","import React, {useState, useEffect} from 'react';\nimport { getLinks, getCharacters, getEpisodes, getLocations } from './api/api'\nimport { Characters } from './components/Characters/Characters'\nimport { Locations } from './components/Locations/Locations'\nimport { Episodes } from './components/Episodes/Episodes'\nimport { WatchList } from './components/WatchList/WatchList'\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\n\n\nimport './App.css';\n\nfunction App() {\n  const [links, setLinks] = useState({});\n  const [characters, setCharacters] = useState({});\n  const [locations, setLocations] = useState({});\n  const [episodes, setEpisodes] = useState({});\n\n  const [value, setValue] = useState(\"Characters\");\n\n  useEffect(() => {\n    getLinks().then(result => setLinks(result));;\n  }, []);\n  \n  useEffect(() => {\n    getCharacters(links).then(result => setCharacters(result.results));;\n    getLocations(links).then(result => setLocations(result.results));\n    getEpisodes(links).then(result => setEpisodes(result.results));\n  }, [links]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BottomNavigation\n          style={{backgroundColor: 'rgba(255, 255, 255, 0.8)', maxWidth: '100%'}}\n          className=\"App__menu\"\n          value={value}\n          onChange={(event, newValue) => {\n            console.log(value);\n            setValue(newValue);\n          }}\n          showLabels\n        >\n          <BottomNavigationAction style={{minWidth: 110}} label=\"Characters\" value=\"Characters\" icon={<PersonPinIcon />} />\n          <BottomNavigationAction style={{minWidth: 110}} label=\"Episodes\" value=\"Episodes\" icon={<FolderIcon />} />\n          <BottomNavigationAction style={{minWidth: 110}} label=\"Locations\" value=\"Locations\" icon={<LocationOnIcon />} />\n          <BottomNavigationAction style={{minWidth: 110}} label=\"My watch list\" value=\"WatchList\" icon={<FavoriteIcon />} />\n        </BottomNavigation>\n      </header>\n      <main>\n      {value==='Characters' && characters[0] &&\n        <Characters characters={characters}/>\n      }\n      {value==='Episodes' && episodes[0] &&\n        <Episodes episodes={episodes}/>\n      }\n      {value==='Locations' && locations[0] &&\n        <Locations locations={locations}/>\n      }\n      {value==='WatchList' &&\n        <WatchList />\n      }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const BaseURL = 'https://rickandmortyapi.com/api';\n\nexport const getLinks = () => fetch(BaseURL)\n.then(response => response.json())\n\nexport  const getCharacters = (links) => fetch(links.characters)\n  .then(response => response.json());\n\nexport  const getLocations = (links) => fetch(links.locations)\n  .then(response => response.json());\n\nexport  const getEpisodes = (links) => fetch(links.episodes)\n  .then(response => response.json());","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}