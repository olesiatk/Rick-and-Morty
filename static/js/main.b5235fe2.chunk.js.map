{"version":3,"sources":["api/api.js","components/Characters/UI/pagination.js","components/Characters/UI/PopUp.js","components/Characters/UI/FilterStatus.js","components/Characters/UI/FilterGender.js","components/Characters/Characters.js","components/Locations/UI/pagination.js","components/Locations/UI/FilterFild.js","components/Locations/Locations.js","components/Episodes/UI/pagination.js","components/Episodes/Episodes.js","components/WatchList/UI/WishList.js","components/WatchList/WatchList.js","App.js","reportWebVitals.js","index.js"],"names":["BaseURL","getLocations","p","fetch","then","response","json","getEpisodes","useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","PopUp","character","React","useState","anchorEl","setAnchorEl","open","setOpen","placement","setPlacement","Popper","transition","TransitionProps","Fade","timeout","Paper","elevation","style","padding","Typography","alt","name","src","image","status","gender","species","location","type","Button","newPlacement","currentTarget","prev","handleClick","width","height","borderRadius","FilterStatus","handleChange","FormControl","variant","minWidth","InputLabel","Select","value","onChange","label","MenuItem","FilterGender","Characters","characters","columns","setColumns","rows","setRows","setPage","setRowsPerPage","queryName","setQueryName","setStatus","setGender","useEffect","key","newRows","filter","toLowerCase","includes","toLocaleLowerCase","handleChangeStatus","target","handleChangeGender","Table","TableHead","TableRow","map","header","TableCell","TextField","placeholder","e","TableBody","slice","row","i","id","TableFooter","TablePagination","rowsPerPageOptions","length","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","FilterFild","query","setQuery","Locations","locations","queryType","setQueryType","queryDimension","setQueryDimension","dimension","SelectProps","inputProps","native","Episodes","episodes","episode","air_date","WishList","list","changeTitleStatus","deleteTitle","List","title","ListItem","borderBottom","display","justifyContent","FormControlLabel","control","Checkbox","color","edge","checked","completed","textAlign","startIcon","WatchList","setList","setTitle","localStorage","JSON","parse","getItem","setItem","stringify","margin","backgroundColor","onSubmit","preventDefault","trim","newTitle","Date","addTitle","flexDirection","titleId","prevList","item","App","setCharacters","setLocations","setEpisodes","setValue","result","prevCharacters","results","prevLocations","prevEpisodes","BottomNavigation","maxWidth","newValue","showLabels","BottomNavigationAction","icon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5235fe2.chunk.js","sourcesContent":["const BaseURL = 'https://rickandmortyapi.com/api';\n\nexport const getCharacters = p => fetch(`${BaseURL}/character?page=${p}`)\n  .then(response => response.json());\n\nexport const getLocations = p => fetch(`${BaseURL}/location?page=${p}`)\n  .then(response => response.json());\n\nexport const getEpisodes = p => fetch(`${BaseURL}/episode?page=${p}`)\n  .then(response => response.json());\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nexport function TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowRight />\n          : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowLeft />\n          : <KeyboardArrowRight />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Popper from '@material-ui/core/Popper';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nexport const PopUp = ({ character }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [placement, setPlacement] = React.useState();\n\n  const handleClick = ({ newPlacement }) => (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen(({ prev }) => placement !== newPlacement || !prev);\n    setPlacement(newPlacement);\n  };\n\n  return (\n    <>\n      <Popper open={open} anchorEl={anchorEl} placement={placement} transition>\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper elevation={3} style={{ padding: '15px' }}>\n              <Typography>\n                <img alt={character.name} src={character.image} />\n                <p>\n                  Name:\n                  {character.name}\n                </p>\n                <p>\n                  Status:\n                  {character.status}\n                </p>\n                <p>\n                  Gender:\n                  {character.gender}\n                </p>\n                <p>\n                  Species:\n                  {character.species}\n                </p>\n                <p>\n                  Location:\n                  {character.location.name}\n                </p>\n                {character.type && (\n                  <p>\n                    Type:\n                    {character.type}\n                  </p>\n                )}\n              </Typography>\n            </Paper>\n          </Fade>\n        )}\n      </Popper>\n      <Button onClick={handleClick('right')}>\n        <img\n          alt={character.name}\n          src={character.image}\n          width=\"50\"\n          height=\"50\"\n          style={{ borderRadius: '10px' }}\n        />\n      </Button>\n    </>\n  );\n};\n\nPopUp.propTypes = {\n  character: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    location: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport const FilterStatus = ({ status, handleChange }) => (\n  <FormControl variant=\"outlined\" style={{ minWidth: 100 }}>\n    <InputLabel>Status</InputLabel>\n    <Select\n      value={status}\n      onChange={handleChange}\n      label=\"Status\"\n    >\n      <MenuItem value=\"\">\n        <em>All</em>\n      </MenuItem>\n      <MenuItem value=\"Alive\">Alive</MenuItem>\n      <MenuItem value=\"Dead\">Dead</MenuItem>\n      <MenuItem value=\"unknown\">unknown</MenuItem>\n    </Select>\n  </FormControl>\n);\n\nFilterStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport const FilterGender = ({ gender, handleChange }) => (\n  <FormControl variant=\"outlined\" style={{ minWidth: 100 }}>\n    <InputLabel>Gender</InputLabel>\n    <Select\n      value={gender}\n      onChange={handleChange}\n      label=\"Status\"\n    >\n      <MenuItem value=\"\">\n        <em>All</em>\n      </MenuItem>\n      <MenuItem value=\"Male\">Male</MenuItem>\n      <MenuItem value=\"Female\">Female</MenuItem>\n      <MenuItem value=\"genderless\">genderless</MenuItem>\n      <MenuItem value=\"unknown\">unknown</MenuItem>\n    </Select>\n  </FormControl>\n);\n\nFilterGender.propTypes = {\n  gender: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\nimport { TablePaginationActions } from './UI/pagination';\nimport { PopUp } from './UI/PopUp';\nimport { FilterStatus } from './UI/FilterStatus';\nimport { FilterGender } from './UI/FilterGender';\n\nexport const Characters = ({ characters }) => {\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState(characters);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [queryName, setQueryName] = useState('');\n  const [status, setStatus] = useState('');\n  const [gender, setGender] = useState('');\n\n  useEffect(() => {\n    setColumns([\n      {\n        key: 'image', name: 'Image',\n      },\n      {\n        key: 'name', name: 'Name',\n      },\n      {\n        key: 'status', name: 'Status',\n      },\n      {\n        key: 'gender', name: 'Gender',\n      },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    const newRows = characters.filter(character => (\n      character.name.toLowerCase().includes(queryName.toLocaleLowerCase())\n    ));\n\n    setRows(newRows);\n  }, [characters, queryName]);\n\n  useEffect(() => {\n    const newRows = characters\n      .filter(character => character.status.includes(status));\n\n    setRows(newRows);\n  }, [characters, status]);\n\n  useEffect(() => {\n    const newRows = characters\n      .filter(character => character.gender.includes(gender));\n\n    setRows(newRows);\n  }, [characters, gender]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeStatus = (event) => {\n    setStatus(event.target.value);\n  };\n\n  const handleChangeGender = (event) => {\n    setGender(event.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Characters</h1>\n      {columns && rows && (\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(header => (\n                <TableCell key={header.key}>\n                  {header.key === 'name' && (\n                    <TextField\n                      label={header.name}\n                      variant=\"outlined\"\n                      type=\"text\"\n                      className=\"new-todo\"\n                      placeholder=\"Find me!\"\n                      value={queryName}\n                      onChange={e => setQueryName(e.target.value)}\n                    />\n                  )}\n                  {header.key === 'status' && (\n                    <FilterStatus\n                      status={status}\n                      handleChange={handleChangeStatus}\n                    />\n                  )}\n                  {header.key === 'gender' && (\n                    <FilterGender\n                      gender={gender}\n                      handleChange={handleChangeGender}\n                    />\n                  )}\n                  {header.key !== 'name'\n                  && header.key !== 'status'\n                  && header.key !== 'gender'\n                  && header.name }\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n            ).map((row, i) => (\n              <TableRow key={row.id}>\n                <TableCell>\n                  <PopUp\n                    character={row}\n                  />\n                </TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.status}</TableCell>\n                <TableCell>{row.gender}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, {\n                  label: 'All', value: -1,\n                }]}\n                // colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nCharacters.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    nama: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nexport function TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowRight />\n          : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowLeft />\n          : <KeyboardArrowRight />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nexport const FilterFild = ({ name, query, setQuery }) => (\n  <TextField\n    label={name}\n    variant=\"outlined\"\n    type=\"text\"\n    className=\"new-todo\"\n    placeholder=\"Find me!\"\n    value={query}\n    onChange={(e) => {\n      setQuery(e.target.value);\n    }}\n  />\n);\n\nFilterFild.propTypes = {\n  name: PropTypes.string.isRequired,\n  query: PropTypes.string.isRequired,\n  setQuery: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { TablePaginationActions } from './UI/pagination';\nimport { FilterFild } from './UI/FilterFild';\n\nexport const Locations = ({ locations }) => {\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState(locations);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [queryName, setQueryName] = useState('');\n  const [queryType, setQueryType] = useState('');\n  const [queryDimension, setQueryDimension] = useState('');\n\n  useEffect(() => {\n    setColumns([\n      {\n        key: 'name', name: 'Name',\n      },\n      {\n        key: 'type', name: 'Type',\n      },\n      {\n        key: 'dimension', name: 'Dimension',\n      },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    const newRows = locations\n      .filter(location => location.name.toLowerCase()\n        .includes(queryName.toLocaleLowerCase()));\n\n    setRows(newRows);\n  }, [locations, queryName]);\n\n  useEffect(() => {\n    const newRows = locations\n      .filter(location => location.type.toLowerCase()\n        .includes(queryType.toLocaleLowerCase()));\n\n    setRows(newRows);\n  }, [locations, queryType]);\n\n  useEffect(() => {\n    const newRows = locations\n      .filter(location => location.dimension.toLowerCase()\n        .includes(queryDimension.toLocaleLowerCase()));\n\n    setRows(newRows);\n  }, [locations, queryDimension]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <h1>Locations</h1>\n      {columns && rows && (\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(header => (\n                <TableCell\n                  key={header.key}\n                >\n                  {header.key === 'name' && (\n                    <FilterFild\n                      name={header.name}\n                      query={queryName}\n                      setQuery={setQueryName}\n                    />\n                  )}\n                  {header.key === 'type' && (\n                    <FilterFild\n                      name={header.name}\n                      query={queryType}\n                      setQuery={setQueryType}\n                    />\n                  )}\n                  {header.key === 'dimension' && (\n                    <FilterFild\n                      name={header.name}\n                      query={queryDimension}\n                      setQuery={setQueryDimension}\n                    />\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n            ).map((row, i) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.type}</TableCell>\n                <TableCell>{row.dimension}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, {\n                  label: 'All', value: -1,\n                }]}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nLocations.propTypes = {\n  locations: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    nama: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    dimension: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nexport function TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowRight />\n          : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowLeft />\n          : <KeyboardArrowRight />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\nimport { TablePaginationActions } from './UI/pagination';\n\nexport const Episodes = ({ episodes }) => {\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState(episodes);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [queryName, setQueryName] = useState('');\n\n  useEffect(() => {\n    setColumns([\n      {\n        key: 'name', name: 'Name',\n      },\n      {\n        key: 'episode', name: 'Episode',\n      },\n      {\n        key: 'air_date', name: 'Air date',\n      },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    const newRows = episodes\n      .filter(episode => episode.name.toLowerCase()\n        .includes(queryName.toLocaleLowerCase()));\n\n    setRows(newRows);\n  }, [episodes, queryName]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <h1>Episodes</h1>\n      {columns && rows && (\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(header => (\n                <TableCell\n                  key={header.key}\n                >\n                  {header.key === 'name' ? (\n                    <TextField\n                      label={header.name}\n                      variant=\"outlined\"\n                      type=\"text\"\n                      className=\"new-todo\"\n                      placeholder=\"Find me!\"\n                      value={queryName}\n                      onChange={(e) => {\n                        setQueryName(e.target.value);\n                      }}\n                    />\n                  ) : header.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n            ).map((row, i) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.episode}</TableCell>\n                <TableCell>{row.air_date}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, {\n                  label: 'All', value: -1,\n                }]}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nEpisodes.propTypes = {\n  episodes: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    nama: PropTypes.string.isRequired,\n    episode: PropTypes.string.isRequired,\n    air_data: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport const WishList = ({ list, changeTitleStatus, deleteTitle }) => (\n  <List style={{ padding: 20 }}>\n    {list.map(title => (\n      <ListItem\n        key={title.id}\n        style={{\n          borderBottom: '1px solid grey',\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <FormControlLabel\n          control={(\n            <Checkbox\n              color=\"primary\"\n              edge=\"start\"\n              onChange={() => changeTitleStatus(title.id)}\n              checked={title.completed}\n            />\n          )}\n          label={title.title}\n        />\n        <Button\n          color=\"secondary\"\n          style={{\n            width: 100, textAlign: 'flex-end',\n          }}\n          startIcon={<CloseIcon />}\n          onClick={() => deleteTitle(title.id)}\n        />\n      </ListItem>\n    ))}\n  </List>\n);\n\nWishList.propTypes = {\n  list: PropTypes.string.isRequired,\n  changeTitleStatus: PropTypes.func.isRequired,\n  deleteTitle: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { WishList } from './UI/WishList';\n\nexport const WatchList = () => {\n  const [list, setList] = useState([]);\n  const [title, setTitle] = useState('');\n\n  useEffect(() => {\n    if (!localStorage.list) {\n      localStorage.setItem('list', JSON.stringify([]));\n    } else {\n      setList(JSON.parse(localStorage.getItem('list')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list]);\n\n  const addTitle = () => {\n    if (title.trim()) {\n      const newTitle = {\n        id: +new Date(),\n        title,\n        completed: false,\n      };\n\n      setList([...list, newTitle]);\n    }\n\n    setTitle('');\n  };\n\n  const deleteTitle = (titleId) => {\n    setList(list.filter(item => item.id !== titleId));\n  };\n\n  const changeTitleStatus = (titleId) => {\n    setList(prevList => prevList.map((item) => {\n      if (item.id === titleId) {\n        return {\n          ...title,\n          completed: !title.completed,\n        };\n      }\n\n      return title;\n    }));\n  };\n\n  return (\n    <div>\n      <h1>My watch list</h1>\n      <Paper\n        style={{\n          margin: 20, backgroundColor: 'rgba(255, 255, 255, 0.5)',\n        }}\n      >\n        <form\n          style={{ padding: 20 }}\n          onSubmit={(e) => {\n            e.preventDefault();\n            addTitle();\n          }}\n        >\n          <FormControl\n            style={{\n              display: 'flex', flexDirection: 'row',\n            }}\n          >\n            <TextField\n              label=\"I want to watch...\"\n              variant=\"outlined\"\n              type=\"text\"\n              className=\"new-title\"\n              placeholder=\"... name of episode... \"\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Add to list\n            </Button>\n          </FormControl>\n        </form>\n        <WishList\n          list={list}\n          changeTitleStatus={changeTitleStatus}\n          deleteTitle={deleteTitle}\n        />\n      </Paper>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\n\nimport { getCharacters, getEpisodes, getLocations } from './api/api';\nimport { Characters } from './components/Characters/Characters';\nimport { Locations } from './components/Locations/Locations';\nimport { Episodes } from './components/Episodes/Episodes';\nimport { WatchList } from './components/WatchList/WatchList';\n\nimport './App.css';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [episodes, setEpisodes] = useState([]);\n\n  const [value, setValue] = useState('Characters');\n\n  useEffect(() => {\n    for (let i = 1; i <= 34; i += 1) {\n      getCharacters(i).then((result) => {\n        setCharacters(prevCharacters => [...prevCharacters, ...result.results]);\n      });\n    }\n\n    for (let i = 1; i <= 6; i += 1) {\n      getLocations(i).then((result) => {\n        setLocations(prevLocations => [...prevLocations, ...result.results]);\n      });\n    }\n\n    for (let i = 1; i <= 3; i += 1) {\n      getEpisodes(i).then((result) => {\n        setEpisodes(prevEpisodes => [...prevEpisodes, ...result.results]);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BottomNavigation\n          style={{\n            backgroundColor: 'rgba(255, 255, 255, 0.8)', maxWidth: '100%',\n          }}\n          className=\"App__menu\"\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n        >\n          <BottomNavigationAction\n            label=\"Characters\"\n            value=\"Characters\"\n            icon={<PersonPinIcon />}\n          />\n          <BottomNavigationAction\n            label=\"Episodes\"\n            value=\"Episodes\"\n            icon={<FolderIcon />}\n          />\n          <BottomNavigationAction\n            label=\"Locations\"\n            value=\"Locations\"\n            icon={<LocationOnIcon />}\n          />\n          <BottomNavigationAction\n            style={{ minWidth: 115 }}\n            label=\"My watch list\"\n            value=\"WatchList\"\n            icon={<FavoriteIcon />}\n          />\n        </BottomNavigation>\n      </header>\n      <main>\n        {value === 'Characters' && characters[0]\n        && <Characters characters={characters} />\n        }\n        {value === 'Episodes' && episodes[0]\n        && <Episodes episodes={episodes} />\n        }\n        {value === 'Locations' && locations[0]\n        && <Locations locations={locations} />\n        }\n        {value === 'WatchList'\n        && <WatchList />\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}