{"version":3,"sources":["api/api.js","components/Characters/UI/pagination.js","components/Characters/UI/PopUp.js","components/Characters/UI/FilterStatus.js","components/Characters/UI/FilterGender.js","components/Characters/Characters.js","components/Locations/UI/pagination.js","components/Locations/UI/FilterFild.js","components/Locations/Locations.js","components/Episodes/UI/pagination.js","components/Episodes/Episodes.js","components/WatchList/UI/WishList.js","components/WatchList/WatchList.js","App.js","reportWebVitals.js","index.js"],"names":["BaseURL","getLocations","p","fetch","then","response","json","getEpisodes","useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","useStyles","paper","border","padding","backgroundColor","palette","background","PopUp","character","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","aria-describedby","type","currentTarget","onBlur","alt","name","src","image","width","height","style","borderRadius","Popper","Paper","elevation","status","gender","species","location","defaultProperties","FilterStatus","handleChange","FormControl","variant","minWidth","InputLabel","Select","value","onChange","label","MenuItem","FilterGender","Characters","characters","columns","setColumns","rows","setRows","setPage","setRowsPerPage","queryName","setQueryName","setStatus","setGender","useEffect","key","newRows","filter","toLowerCase","includes","toLocaleLowerCase","handleChangeStatus","target","handleChangeGender","Table","TableHead","TableRow","map","header","TableCell","TextField","placeholder","e","TableBody","slice","row","i","TableFooter","TablePagination","rowsPerPageOptions","length","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","FilterFild","query","setQuery","Locations","locations","queryType","setQueryType","queryDimension","setQueryDimension","dimension","SelectProps","inputProps","native","Episodes","episodes","episode","air_date","air_data","WishList","list","changeTitleStatus","deleteTitle","List","item","ListItem","borderBottom","display","justifyContent","Checkbox","color","edge","checked","completed","textAligt","title","textAlign","startIcon","WatchList","setList","setTitle","localStorage","JSON","parse","getItem","setItem","stringify","margin","onSubmit","preventDefault","trim","newTitle","random","addTitle","flexDirection","titleId","prevList","App","setCharacters","setLocations","setEpisodes","setValue","result","prevCharacters","results","prevLocations","prevEpisodes","BottomNavigation","maxWidth","newValue","showLabels","BottomNavigationAction","icon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f97f7d5f.chunk.js","sourcesContent":["const BaseURL = 'https://rickandmortyapi.com/api';\n\nexport const getCharacters = p => fetch(`${BaseURL}/character?page=${p}`)\n  .then(response => response.json());\n\nexport const getLocations = p => fetch(`${BaseURL}/location?page=${p}`)\n  .then(response => response.json());\n\nexport const getEpisodes = p => fetch(`${BaseURL}/episode?page=${p}`)\n  .then(response => response.json());\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nexport function TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowRight />\n          : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowLeft />\n          : <KeyboardArrowRight />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Popper from '@material-ui/core/Popper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    border: '1px solid',\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport const PopUp = ({ character }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n\n  return (\n    <div>\n      <Button\n        aria-describedby={id}\n        type=\"button\"\n        onClick={handleClick}\n        onBlur={() => setAnchorEl(null)}\n      >\n        <img\n          alt={character.name}\n          src={character.image}\n          width=\"50\"\n          height=\"50\"\n          style={{ borderRadius: '10px' }}\n        />\n      </Button>\n      <Popper id={id} open={open} anchorEl={anchorEl}>\n        <div className={classes.paper}>\n          <Paper elevation={3} style={{ padding: '15px' }}>\n            <div>\n              <img alt={character.name} src={character.image} />\n              <p>\n                Name:\n                {character.name}\n              </p>\n              <p>\n                Status:\n                {character.status}\n              </p>\n              <p>\n                Gender:\n                {character.gender}\n              </p>\n              <p>\n                Species:\n                {character.species}\n              </p>\n              <p>\n                Location:\n                {character.location.name}\n              </p>\n              {character.type && (\n                <p>\n                  Type:\n                  {character.type}\n                </p>\n              )}\n            </div>\n          </Paper>\n        </div>\n      </Popper>\n    </div>\n  );\n};\n\nPopUp.propTypes = {\n  character: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    location: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nPopUp.defaultProperties = {\n  type: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport const FilterStatus = ({ status, handleChange }) => (\n  <FormControl variant=\"outlined\" style={{ minWidth: 100 }}>\n    <InputLabel>Status</InputLabel>\n    <Select\n      value={status}\n      onChange={handleChange}\n      label=\"Status\"\n    >\n      <MenuItem value=\"\">\n        <em>All</em>\n      </MenuItem>\n      <MenuItem value=\"Alive\">Alive</MenuItem>\n      <MenuItem value=\"Dead\">Dead</MenuItem>\n      <MenuItem value=\"unknown\">unknown</MenuItem>\n    </Select>\n  </FormControl>\n);\n\nFilterStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport const FilterGender = ({ gender, handleChange }) => (\n  <FormControl variant=\"outlined\" style={{ minWidth: 100 }}>\n    <InputLabel>Gender</InputLabel>\n    <Select\n      value={gender}\n      onChange={handleChange}\n      label=\"Status\"\n    >\n      <MenuItem value=\"\">\n        <em>All</em>\n      </MenuItem>\n      <MenuItem value=\"Male\">Male</MenuItem>\n      <MenuItem value=\"Female\">Female</MenuItem>\n      <MenuItem value=\"Genderless\">Genderless</MenuItem>\n      <MenuItem value=\"unknown\">unknown</MenuItem>\n    </Select>\n  </FormControl>\n);\n\nFilterGender.propTypes = {\n  gender: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\nimport { TablePaginationActions } from './UI/pagination';\nimport { PopUp } from './UI/PopUp';\nimport { FilterStatus } from './UI/FilterStatus';\nimport { FilterGender } from './UI/FilterGender';\n\nexport const Characters = ({ characters }) => {\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState(characters);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [queryName, setQueryName] = useState('');\n  const [status, setStatus] = useState('');\n  const [gender, setGender] = useState('');\n\n  useEffect(() => {\n    setColumns([\n      {\n        key: 'image', name: 'Image',\n      },\n      {\n        key: 'name', name: 'Name',\n      },\n      {\n        key: 'status', name: 'Status',\n      },\n      {\n        key: 'gender', name: 'Gender',\n      },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    const newRows = characters.filter(character => (\n      character.name.toLowerCase().includes(queryName.toLocaleLowerCase())\n    ));\n\n    setRows(newRows);\n  }, [characters, queryName]);\n\n  useEffect(() => {\n    const newRows = characters\n      .filter(character => character.status.includes(status));\n\n    setRows(newRows);\n  }, [characters, status]);\n\n  useEffect(() => {\n    const newRows = characters\n      .filter(character => character.gender.includes(gender));\n\n    setRows(newRows);\n  }, [characters, gender]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeStatus = (event) => {\n    setStatus(event.target.value);\n  };\n\n  const handleChangeGender = (event) => {\n    setGender(event.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Characters</h1>\n      {columns && rows && (\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(header => (\n                <TableCell key={header.key}>\n                  {header.key === 'name' && (\n                    <TextField\n                      label={header.name}\n                      variant=\"outlined\"\n                      type=\"text\"\n                      className=\"new-todo\"\n                      placeholder=\"Find me!\"\n                      value={queryName}\n                      onChange={e => setQueryName(e.target.value)}\n                    />\n                  )}\n                  {header.key === 'status' && (\n                    <FilterStatus\n                      status={status}\n                      handleChange={handleChangeStatus}\n                    />\n                  )}\n                  {header.key === 'gender' && (\n                    <FilterGender\n                      gender={gender}\n                      handleChange={handleChangeGender}\n                    />\n                  )}\n                  {header.key !== 'name'\n                  && header.key !== 'status'\n                  && header.key !== 'gender'\n                  && header.name }\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n            ).map((row, i) => (\n              <TableRow key={row.id}>\n                <TableCell>\n                  <PopUp\n                    character={row}\n                  />\n                </TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.status}</TableCell>\n                <TableCell>{row.gender}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, {\n                  label: 'All', value: -1,\n                }]}\n                // colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nCharacters.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nexport function TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowRight />\n          : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowLeft />\n          : <KeyboardArrowRight />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nexport const FilterFild = ({ name, query, setQuery }) => (\n  <TextField\n    label={name}\n    variant=\"outlined\"\n    type=\"text\"\n    className=\"new-todo\"\n    placeholder=\"Find me!\"\n    value={query}\n    onChange={(e) => {\n      setQuery(e.target.value);\n    }}\n  />\n);\n\nFilterFild.propTypes = {\n  name: PropTypes.string.isRequired,\n  query: PropTypes.string.isRequired,\n  setQuery: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { TablePaginationActions } from './UI/pagination';\nimport { FilterFild } from './UI/FilterFild';\n\nexport const Locations = ({ locations }) => {\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState(locations);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [queryName, setQueryName] = useState('');\n  const [queryType, setQueryType] = useState('');\n  const [queryDimension, setQueryDimension] = useState('');\n\n  useEffect(() => {\n    setColumns([\n      {\n        key: 'name', name: 'Name',\n      },\n      {\n        key: 'type', name: 'Type',\n      },\n      {\n        key: 'dimension', name: 'Dimension',\n      },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    const newRows = locations\n      .filter(location => location.name.toLowerCase()\n        .includes(queryName.toLocaleLowerCase()));\n\n    setRows(newRows);\n  }, [locations, queryName]);\n\n  useEffect(() => {\n    const newRows = locations\n      .filter(location => location.type.toLowerCase()\n        .includes(queryType.toLocaleLowerCase()));\n\n    setRows(newRows);\n  }, [locations, queryType]);\n\n  useEffect(() => {\n    const newRows = locations\n      .filter(location => location.dimension.toLowerCase()\n        .includes(queryDimension.toLocaleLowerCase()));\n\n    setRows(newRows);\n  }, [locations, queryDimension]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <h1>Locations</h1>\n      {columns && rows && (\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(header => (\n                <TableCell\n                  key={header.key}\n                >\n                  {header.key === 'name' && (\n                    <FilterFild\n                      name={header.name}\n                      query={queryName}\n                      setQuery={setQueryName}\n                    />\n                  )}\n                  {header.key === 'type' && (\n                    <FilterFild\n                      name={header.name}\n                      query={queryType}\n                      setQuery={setQueryType}\n                    />\n                  )}\n                  {header.key === 'dimension' && (\n                    <FilterFild\n                      name={header.name}\n                      query={queryDimension}\n                      setQuery={setQueryDimension}\n                    />\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n            ).map((row, i) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.type}</TableCell>\n                <TableCell>{row.dimension}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, {\n                  label: 'All', value: -1,\n                }]}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nLocations.propTypes = {\n  locations: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    dimension: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nexport function TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowRight />\n          : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl'\n          ? <KeyboardArrowLeft />\n          : <KeyboardArrowRight />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\nimport { TablePaginationActions } from './UI/pagination';\n\nexport const Episodes = ({ episodes }) => {\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState(episodes);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [queryName, setQueryName] = useState('');\n\n  useEffect(() => {\n    setColumns([\n      {\n        key: 'name', name: 'Name',\n      },\n      {\n        key: 'episode', name: 'Episode',\n      },\n      {\n        key: 'air_date', name: 'Air date',\n      },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    const newRows = episodes\n      .filter(episode => episode.name.toLowerCase()\n        .includes(queryName.toLocaleLowerCase()));\n\n    setRows(newRows);\n  }, [episodes, queryName]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <h1>Episodes</h1>\n      {columns && rows && (\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(header => (\n                <TableCell\n                  key={header.key}\n                >\n                  {header.key === 'name' ? (\n                    <TextField\n                      label={header.name}\n                      variant=\"outlined\"\n                      type=\"text\"\n                      className=\"new-todo\"\n                      placeholder=\"Find me!\"\n                      value={queryName}\n                      onChange={(e) => {\n                        setQueryName(e.target.value);\n                      }}\n                    />\n                  ) : header.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n            ).map((row, i) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.episode}</TableCell>\n                <TableCell>{row.air_date}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, {\n                  label: 'All', value: -1,\n                }]}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nEpisodes.propTypes = {\n  episodes: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    episode: PropTypes.string.isRequired,\n    air_data: PropTypes.string,\n  })).isRequired,\n};\n\nEpisodes.defaultProperties = {\n  air_data: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport const WishList = ({ list, changeTitleStatus, deleteTitle }) => (\n  <List style={{ padding: 20 }}>\n    {list.map(item => (\n      <ListItem\n        key={item.title}\n        style={{\n          borderBottom: '1px solid grey',\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Checkbox\n          color=\"primary\"\n          edge=\"start\"\n          onChange={() => changeTitleStatus(item.id)}\n          checked={item.completed}\n        />\n        <label style={{ textAligt: 'start' }}>{item.title}</label>\n        <Button\n          color=\"secondary\"\n          style={{\n            width: 100, textAlign: 'flex-end',\n          }}\n          startIcon={<CloseIcon />}\n          onClick={() => deleteTitle(item.id)}\n        />\n      </ListItem>\n    ))}\n  </List>\n);\n\nWishList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired).isRequired,\n  changeTitleStatus: PropTypes.func.isRequired,\n  deleteTitle: PropTypes.func.isRequired,\n};\n\n// (PropTypes.shape({\n//   id: PropTypes.number.isRequired,\n//   title: PropTypes.string.isRequired,\n//   completed: PropTypes.bool.isRequired,\n// })).\n","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { WishList } from './UI/WishList';\n\nexport const WatchList = () => {\n  const [list, setList] = useState([]);\n  const [title, setTitle] = useState('');\n\n  useEffect(() => {\n    if (!localStorage.list) {\n      localStorage.setItem('list', JSON.stringify([]));\n    } else {\n      setList(JSON.parse(localStorage.getItem('list')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list]);\n\n  const addTitle = () => {\n    if (title.trim()) {\n      const newTitle = {\n        id: Math.random(),\n        title,\n        completed: false,\n      };\n\n      setList([...list, newTitle]);\n    }\n\n    setTitle('');\n  };\n\n  const deleteTitle = (titleId) => {\n    setList(list.filter(item => item.id !== titleId));\n  };\n\n  const changeTitleStatus = (titleId) => {\n    setList(prevList => prevList.map((item) => {\n      if (item.id === titleId) {\n        return {\n          ...item,\n          completed: !item.completed,\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  return (\n    <div>\n      <h1>My watch list</h1>\n      <Paper\n        style={{\n          margin: 20, backgroundColor: 'rgba(255, 255, 255, 0.5)',\n        }}\n      >\n        <form\n          style={{ padding: 20 }}\n          onSubmit={(e) => {\n            e.preventDefault();\n            addTitle();\n          }}\n        >\n          <FormControl\n            style={{\n              display: 'flex', flexDirection: 'row',\n            }}\n          >\n            <TextField\n              label=\"I want to watch...\"\n              variant=\"outlined\"\n              type=\"text\"\n              className=\"new-title\"\n              placeholder=\"... name of episode... \"\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Add to list\n            </Button>\n          </FormControl>\n        </form>\n        <WishList\n          list={list}\n          changeTitleStatus={changeTitleStatus}\n          deleteTitle={deleteTitle}\n        />\n      </Paper>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\n\nimport { getCharacters, getEpisodes, getLocations } from './api/api';\nimport { Characters } from './components/Characters/Characters';\nimport { Locations } from './components/Locations/Locations';\nimport { Episodes } from './components/Episodes/Episodes';\nimport { WatchList } from './components/WatchList/WatchList';\n\nimport './App.css';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [episodes, setEpisodes] = useState([]);\n\n  const [value, setValue] = useState('Characters');\n\n  useEffect(() => {\n    for (let i = 1; i <= 34; i += 1) {\n      getCharacters(i).then((result) => {\n        setCharacters(prevCharacters => [...prevCharacters, ...result.results]);\n      });\n    }\n\n    for (let i = 1; i <= 6; i += 1) {\n      getLocations(i).then((result) => {\n        setLocations(prevLocations => [...prevLocations, ...result.results]);\n      });\n    }\n\n    for (let i = 1; i <= 3; i += 1) {\n      getEpisodes(i).then((result) => {\n        setEpisodes(prevEpisodes => [...prevEpisodes, ...result.results]);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BottomNavigation\n          style={{\n            backgroundColor: 'rgba(255, 255, 255, 0.8)', maxWidth: '100%',\n          }}\n          className=\"App__menu\"\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n        >\n          <BottomNavigationAction\n            label=\"Characters\"\n            value=\"Characters\"\n            icon={<PersonPinIcon />}\n          />\n          <BottomNavigationAction\n            label=\"Episodes\"\n            value=\"Episodes\"\n            icon={<FolderIcon />}\n          />\n          <BottomNavigationAction\n            label=\"Locations\"\n            value=\"Locations\"\n            icon={<LocationOnIcon />}\n          />\n          <BottomNavigationAction\n            style={{ minWidth: 115 }}\n            label=\"My watch list\"\n            value=\"WatchList\"\n            icon={<FavoriteIcon />}\n          />\n        </BottomNavigation>\n      </header>\n      <main>\n        {value === 'Characters' && characters[0]\n        && <Characters characters={characters} />\n        }\n        {value === 'Episodes' && episodes[0]\n        && <Episodes episodes={episodes} />\n        }\n        {value === 'Locations' && locations[0]\n        && <Locations locations={locations} />\n        }\n        {value === 'WatchList'\n        && <WatchList />\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}